#BlueJ class context
comment0.params=
comment0.target=Vector()
comment0.text=\n\ Create\ a\ new,\ neutral\ vector.\n
comment1.params=direction\ length
comment1.target=Vector(int,\ double)
comment1.text=\n\ Create\ a\ vector\ with\ given\ direction\ and\ length.\ The\ direction\ should\ be\ in\n\ the\ range\ [0..359],\ where\ 0\ is\ EAST,\ and\ degrees\ increase\ clockwise.\n
comment10.params=
comment10.target=int\ getDirection()
comment10.text=\n\ Return\ the\ direction\ of\ this\ vector\ (in\ degrees).\ 0\ is\ EAST.\n
comment11.params=
comment11.target=double\ getLength()
comment11.text=\n\ Return\ the\ length\ of\ this\ vector.\n
comment12.params=
comment12.target=void\ updatePolar()
comment12.text=\n\ Update\ the\ direction\ and\ length\ fom\ the\ current\ dx,\ dy.\n
comment13.params=
comment13.target=void\ updateCartesian()
comment13.text=\n\ Update\ dx\ and\ dy\ from\ the\ current\ direction\ and\ length.\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment2.params=dx\ dy
comment2.target=Vector(double,\ double)
comment2.text=\n\ Create\ a\ vector\ by\ specifying\ the\ x\ and\ y\ offsets\ from\ start\ to\ end\ points.\n
comment3.params=direction
comment3.target=void\ setDirection(int)
comment3.text=\n\ Set\ the\ direction\ of\ this\ vector,\ leaving\ the\ length\ intact.\n
comment4.params=other
comment4.target=void\ add(Vector)
comment4.text=\n\ Add\ another\ vector\ to\ this\ vector.\n
comment5.params=length
comment5.target=void\ setLength(double)
comment5.text=\n\ Set\ the\ length\ of\ this\ vector,\ leaving\ the\ direction\ intact.\n
comment6.params=factor
comment6.target=void\ scale(double)
comment6.text=\n\ Scale\ this\ vector\ up\ (factor\ >\ 1)\ or\ down\ (factor\ <\ 1).\ The\ direction\n\ remains\ unchanged.\n
comment7.params=
comment7.target=void\ setNeutral()
comment7.text=\n\ Set\ this\ vector\ to\ the\ neutral\ vector\ (length\ 0).\n
comment8.params=
comment8.target=double\ getX()
comment8.text=\n\ Return\ the\ x\ offset\ of\ this\ vector\ (start\ to\ end\ point).\n
comment9.params=
comment9.target=double\ getY()
comment9.text=\n\ Return\ the\ y\ offset\ of\ this\ vector\ (start\ to\ end\ point).\n
numComments=15
